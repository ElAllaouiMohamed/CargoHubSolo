// <auto-generated />
using System;
using System.Collections.Generic;
using CargoHubV2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CargoHubV2.Migrations
{
    [DbContext(typeof(CargoHubContext))]
    [Migration("20250525045652_database3")]
    partial class database3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CargoHubV2.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("CargoHubV2.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ItemId")
                        .HasColumnType("text");

                    b.Property<string>("ItemReference")
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<int>>("Locations")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("TotalAllocated")
                        .HasColumnType("integer");

                    b.Property<int>("TotalAvailable")
                        .HasColumnType("integer");

                    b.Property<int>("TotalExpected")
                        .HasColumnType("integer");

                    b.Property<int>("TotalOnHand")
                        .HasColumnType("integer");

                    b.Property<int>("TotalOrdered")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("CargoHubV2.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("CommodityCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemGroup")
                        .HasColumnType("integer");

                    b.Property<int>("ItemLine")
                        .HasColumnType("integer");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer");

                    b.Property<string>("ModelNumber")
                        .HasColumnType("text");

                    b.Property<int>("PackOrderQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("text");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.Property<string>("SupplierPartNumber")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<int>("UnitOrderQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("UnitPurchaseQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("UpcCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("CargoHubV2.Models.ItemGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ItemGroups");
                });

            modelBuilder.Entity("CargoHubV2.Models.ItemLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ItemLines");
                });

            modelBuilder.Entity("CargoHubV2.Models.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("CargoHubV2.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("CargoHubV2.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BillTo")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "bill_to");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "notes");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "order_date");

                    b.Property<string>("OrderStatus")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "order_status");

                    b.Property<string>("PickingNotes")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "picking_notes");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "reference");

                    b.Property<string>("ReferenceExtra")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "reference_extra");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "request_date");

                    b.Property<string>("ShipTo")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "ship_to");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "shipment_id");

                    b.Property<string>("ShippingNotes")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "shipping_notes");

                    b.Property<int>("SourceId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "source_id");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "total_amount");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "total_discount");

                    b.Property<decimal>("TotalSurcharge")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "total_surcharge");

                    b.Property<decimal>("TotalTax")
                        .HasColumnType("numeric")
                        .HasAnnotation("Relational:JsonPropertyName", "total_tax");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "warehouse_id");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CargoHubV2.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "amount");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "item_id");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasAnnotation("Relational:JsonPropertyName", "items");
                });

            modelBuilder.Entity("CargoHubV2.Models.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CarrierCode")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "carrier_code");

                    b.Property<string>("CarrierDescription")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "carrier_description");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "created_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "notes");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "order_date");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "order_id");

                    b.Property<string>("PaymentType")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "payment_type");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "request_date");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "service_code");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "shipment_date");

                    b.Property<string>("ShipmentStatus")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "shipment_status");

                    b.Property<string>("ShipmentType")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "shipment_type");

                    b.Property<int>("SourceId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "source_id");

                    b.Property<int>("TotalPackageCount")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "total_package_count");

                    b.Property<double>("TotalPackageWeight")
                        .HasColumnType("double precision")
                        .HasAnnotation("Relational:JsonPropertyName", "total_package_weight");

                    b.Property<string>("TransferMode")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "transfer_mode");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "updated_at");

                    b.HasKey("Id");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("CargoHubV2.Models.ShipmentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "amount");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "item_id");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentId");

                    b.ToTable("ShipmentItems");

                    b.HasAnnotation("Relational:JsonPropertyName", "items");
                });

            modelBuilder.Entity("CargoHubV2.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AddressExtra")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("ContactName")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.Property<string>("Reference")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("CargoHubV2.Models.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Reference")
                        .HasColumnType("text");

                    b.Property<int?>("TransferFrom")
                        .HasColumnType("integer");

                    b.Property<string>("TransferStatus")
                        .HasColumnType("text");

                    b.Property<int?>("TransferTo")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("CargoHubV2.Models.TransferItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TransferId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TransferId");

                    b.ToTable("TransferItems");
                });

            modelBuilder.Entity("CargoHubV2.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int?>("ContactId")
                        .HasColumnType("integer");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Zip")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("CargoHubV2.Models.WarehouseContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WarehouseContacts");
                });

            modelBuilder.Entity("CargoHubV2.Models.OrderItem", b =>
                {
                    b.HasOne("CargoHubV2.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CargoHubV2.Models.ShipmentItem", b =>
                {
                    b.HasOne("CargoHubV2.Models.Shipment", "Shipment")
                        .WithMany("Items")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("CargoHubV2.Models.TransferItem", b =>
                {
                    b.HasOne("CargoHubV2.Models.Transfer", "Transfer")
                        .WithMany("Items")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transfer");
                });

            modelBuilder.Entity("CargoHubV2.Models.Warehouse", b =>
                {
                    b.HasOne("CargoHubV2.Models.WarehouseContact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("CargoHubV2.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CargoHubV2.Models.Shipment", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("CargoHubV2.Models.Transfer", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
